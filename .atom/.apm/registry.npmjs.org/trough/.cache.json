{"_id":"trough","_rev":"3-9528169e57ed498edc6532a8c85a8c83","name":"trough","description":"Middleware: a channel used to convey a liquid","dist-tags":{"latest":"1.0.2"},"versions":{"1.0.0":{"name":"trough","version":"1.0.0","description":"Middleware: a channel used to convey a liquid","license":"MIT","keywords":["middleware","ware"],"dependencies":{},"repository":{"type":"git","url":"git+https://github.com/wooorm/trough.git"},"bugs":{"url":"https://github.com/wooorm/trough/issues"},"author":{"name":"Titus Wormer","email":"tituswormer@gmail.com","url":"http://wooorm.com"},"contributors":[{"name":"Titus Wormer","email":"tituswormer@gmail.com","url":"http://wooorm.com"}],"engines":{"node":">=0.11.0"},"files":["index.js"],"devDependencies":{"browserify":"^13.0.0","esmangle":"^1.0.0","nyc":"^7.1.0","remark-cli":"^1.0.0","remark-comment-config":"^4.0.0","remark-github":"^5.0.0","remark-lint":"^4.0.0","remark-toc":"^3.0.0","remark-validate-links":"^4.0.0","tape":"^4.4.0","xo":"^0.16.0"},"scripts":{"build-md":"remark . --quiet --frail","build-bundle":"browserify index.js -s trough > trough.js","build-mangle":"esmangle trough.js > trough.min.js","build":"npm run build-md && npm run build-bundle && npm run build-mangle","lint":"xo","test-api":"node test","test-coverage":"nyc --reporter lcov tape test.js","test":"npm run build && npm run lint && npm run test-coverage"},"nyc":{"check-coverage":true,"lines":100,"functions":100,"branches":100},"xo":{"space":true,"rules":{"guard-for-in":"off","max-lines":"off"},"ignores":["trough.js","trough.min.js"]},"remarkConfig":{"output":true,"plugins":{"comment-config":null,"lint":{"heading-increment":false,"no-duplicate-headings":false,"list-item-spacing":false},"github":null,"toc":{"tight":true,"maxDepth":3},"validate-links":null},"settings":{"bullet":"*"}},"gitHead":"78f9debf5f756e2b18ce9ff70db4f2907896e3a8","homepage":"https://github.com/wooorm/trough#readme","_id":"trough@1.0.0","_shasum":"6bdedfe7f2aa49a6f3c432257687555957f342fd","_from":".","_npmVersion":"3.3.6","_nodeVersion":"5.0.0","_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"dist":{"shasum":"6bdedfe7f2aa49a6f3c432257687555957f342fd","tarball":"https://registry.npmjs.org/trough/-/trough-1.0.0.tgz"},"maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/trough-1.0.0.tgz_1470065839549_0.26185039919801056"},"directories":{}},"1.0.1":{"name":"trough","version":"1.0.1","description":"Middleware: a channel used to convey a liquid","license":"MIT","keywords":["middleware","ware"],"repository":{"type":"git","url":"git+https://github.com/wooorm/trough.git"},"bugs":{"url":"https://github.com/wooorm/trough/issues"},"author":{"name":"Titus Wormer","email":"tituswormer@gmail.com","url":"http://wooorm.com"},"contributors":[{"name":"Titus Wormer","email":"tituswormer@gmail.com","url":"http://wooorm.com"}],"files":["index.js"],"dependencies":{},"devDependencies":{"browserify":"^14.1.0","esmangle":"^1.0.0","nyc":"^11.0.0","remark-cli":"^3.0.0","remark-preset-wooorm":"^3.0.0","tape":"^4.4.0","xo":"^0.18.0"},"scripts":{"build-md":"remark . -qfo","build-bundle":"browserify index.js -s trough > trough.js","build-mangle":"esmangle trough.js > trough.min.js","build":"npm run build-md && npm run build-bundle && npm run build-mangle","lint":"xo","test-api":"node test","test-coverage":"nyc --reporter lcov tape test.js","test":"npm run build && npm run lint && npm run test-coverage"},"nyc":{"check-coverage":true,"lines":100,"functions":100,"branches":100},"xo":{"space":true,"esnext":false,"rules":{"guard-for-in":"off","unicorn/prefer-type-error":"off"},"ignores":["trough.js"]},"remarkConfig":{"plugins":["preset-wooorm"]},"gitHead":"5980e8f9091ba499b894014476414cfe258404c7","homepage":"https://github.com/wooorm/trough#readme","_id":"trough@1.0.1","_shasum":"a9fd8b0394b0ae8fff82e0633a0a36ccad5b5f86","_from":".","_npmVersion":"2.14.2","_nodeVersion":"4.0.0","_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"dist":{"shasum":"a9fd8b0394b0ae8fff82e0633a0a36ccad5b5f86","tarball":"https://registry.npmjs.org/trough/-/trough-1.0.1.tgz"},"maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/trough-1.0.1.tgz_1499594561072_0.2403400642797351"},"directories":{}},"1.0.2":{"name":"trough","version":"1.0.2","description":"Middleware: a channel used to convey a liquid","license":"MIT","keywords":["middleware","ware"],"repository":{"type":"git","url":"git+https://github.com/wooorm/trough.git"},"bugs":{"url":"https://github.com/wooorm/trough/issues"},"author":{"name":"Titus Wormer","email":"tituswormer@gmail.com","url":"http://wooorm.com"},"contributors":[{"name":"Titus Wormer","email":"tituswormer@gmail.com","url":"http://wooorm.com"}],"files":["index.js"],"dependencies":{},"devDependencies":{"browserify":"^16.0.0","esmangle":"^1.0.0","nyc":"^11.0.0","prettier":"^1.12.0","remark-cli":"^5.0.0","remark-preset-wooorm":"^4.0.0","tape":"^4.4.0","xo":"^0.20.0"},"scripts":{"format":"remark . -qfo && prettier --write '**/*.js' && xo --fix","build-bundle":"browserify index.js -s trough > trough.js","build-mangle":"esmangle trough.js > trough.min.js","build":"npm run build-bundle && npm run build-mangle","test-api":"node test","test-coverage":"nyc --reporter lcov tape test.js","test":"npm run format && npm run build && npm run test-coverage"},"prettier":{"tabWidth":2,"useTabs":false,"singleQuote":true,"bracketSpacing":false,"semi":false,"trailingComma":"none"},"xo":{"prettier":true,"esnext":false,"rules":{"guard-for-in":"off","unicorn/prefer-type-error":"off","no-var":"off","prefer-arrow-callback":"off"},"ignores":["trough.js"]},"remarkConfig":{"plugins":["preset-wooorm"]},"nyc":{"check-coverage":true,"lines":100,"functions":100,"branches":100},"gitHead":"b0935085712558b7497721a4a4da977bd65be80d","homepage":"https://github.com/wooorm/trough#readme","_id":"trough@1.0.2","_npmVersion":"5.6.0","_nodeVersion":"9.5.0","_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"dist":{"integrity":"sha512-FHkoUZvG6Egrv9XZAyYGKEyb1JMsFphgPjoczkZC2y6W93U1jswcVURB8MUvtsahEPEVACyxD47JAL63vF4JsQ==","shasum":"7f1663ec55c480139e2de5e486c6aef6cc24a535","tarball":"https://registry.npmjs.org/trough/-/trough-1.0.2.tgz","fileCount":4,"unpackedSize":11855,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa06cTCRA9TVsSAnZWagAAGgkQAKS7ViyM838Pgtw68Evs\nunrg9Yuc7OGFBSAPUxJ3bjz3GDrJkVPGs8oy1GTy9awhUoFRdREkjTj0SpEw\nBxhRiTQioT48wAEuYjzTX8C8ddYoMOBNiJrlUy/6u3cFVpiVIMIOtpxwQjzi\n8gKRl97DmFpEvMDwui5JzVa1SfKwKgMLCjPlIOK7g4x/je02f9DpoZ5NAxl3\ncuiG4z596kbyECFL11ZlFRU1p3sKyTgiWkb7mJQoexR91xO0mHSdXz6xmAGL\nbG7vKhk3EReXq5JVz5s+X/gI3iXPLeVxsy5PjlDCy9C/3SFXzx/BOxjR7Ap+\n/gEhk8Z0CfEiH2UKMall3W4Mcjy5nM/mv9zzqMVzDZVAWEX6cBAUE26FZCx4\nXBie9iITiH2tnMMqKsZL0HARkdgOPqRN19DGq6Ph+PE8k3fLHW7ZsGdB2tvP\nxu2OXzJXkEqfPbKKN7c3AG2zER4/qul/mhefKOHlzRTXWE/6nS4m/TpgD1et\nUY6DSPYZf2RyTCUkkonohzC/jQL4jwMgIL+ba0zjHBwVe/kobABQKsegTnfo\nMCrpoOCBZ64zydLAyrvJqnWTsKDQ8GXxj/8LYf55E9WWZZ/2xMVt516flAif\nXsWZPA2oxsFvyiuc5FXYo03ZV0Ej8gCJUxAOvI1j81TXwsKID9YqgeIwdZek\nhCsw\r\n=HnHQ\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/trough_1.0.2_1523820305253_0.8164597630291217"}}},"readme":"# trough [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\n> **trough** /trôf/ — a channel used to convey a liquid.\n\n`trough` is like [`ware`][ware] with less sugar, and middleware\nfunctions can change the input of the next.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install trough\n```\n\n## Usage\n\n```js\nvar fs = require('fs')\nvar path = require('path')\nvar trough = require('trough')\n\nvar pipeline = trough()\n  .use(function(fileName) {\n    console.log('Checking... ' + fileName)\n  })\n  .use(function(fileName) {\n    return path.join(process.cwd(), fileName)\n  })\n  .use(function(filePath, next) {\n    fs.stat(filePath, function(err, stats) {\n      next(err, {filePath, stats})\n    })\n  })\n  .use(function(ctx, next) {\n    if (ctx.stats.isFile()) {\n      fs.readFile(ctx.filePath, next)\n    } else {\n      next(new Error('Expected file'))\n    }\n  })\n\npipeline.run('readme.md', console.log)\npipeline.run('node_modules', console.log)\n```\n\nYields:\n\n```txt\nChecking... readme.md\nChecking... node_modules\nError: Expected file\n    at ~/example.js:21:12\n    at wrapped (~/node_modules/trough/index.js:93:19)\n    at next (~/node_modules/trough/index.js:56:24)\n    at done (~/node_modules/trough/index.js:124:12)\n    at ~/node_modules/example.js:14:7\n    at FSReqWrap.oncomplete (fs.js:153:5)\nnull <Buffer 23 20 74 72 6f 75 67 68 20 5b 21 5b 42 75 69 6c 64 20 53 74 61 74 75 73 5d 5b 74 72 61 76 69 73 2d 62 61 64 67 65 5d 5d 5b 74 72 61 76 69 73 5d 20 5b ... >\n```\n\n## API\n\n### `trough()`\n\nCreate a new [`Trough`][trough].\n\n### `Trough`\n\nA pipeline.\n\n### `Trough#run([input..., ]done)`\n\nRun the pipeline (all [`use()`][use]d middleware).  Invokes [`done`][done]\non completion with either an error or the output of the last middleware\n\n> Note! as the length of input defines whether [async][] function\n> get a `next` function, it’s recommended to keep `input` at one\n> value normally.\n\n#### `function done(err?, [output...])`\n\nThe final handler passed to [`run()`][run], invoked with an error\nif a [middleware function][fn] rejected, passed, or threw one, or\nthe output of the last middleware function.\n\n### `Trough#use(fn)`\n\nAdd `fn`, a [middleware function][fn], to the pipeline.\n\n#### `function fn([input..., ][next])`\n\nA middleware function invoked with the output of its predecessor.\n\n##### Synchronous\n\nIf `fn` returns or throws an error, the pipeline fails and `done` is\ninvoked with that error.\n\nIf `fn` returns a value (neither `null` nor `undefined`), the first\n`input` of the next function is set to that value (all other `input`\nis passed through).\n\n###### Example\n\nThe following example shows how returning an error stops the pipeline:\n\n```js\nvar trough = require('trough')\n\ntrough()\n  .use(function(val) {\n    return new Error('Got: ' + val)\n  })\n  .run('some value', console.log)\n```\n\nYields:\n\n```txt\nError: Got: some value\n    at ~/example.js:5:12\n    ...\n```\n\nThe following example shows how throwing an error stops the pipeline:\n\n```js\nvar trough = require('trough')\n\ntrough()\n  .use(function(val) {\n    throw new Error('Got: ' + val)\n  })\n  .run('more value', console.log)\n```\n\nYields:\n\n```txt\nError: Got: more value\n    at ~/example.js:5:11\n    ...\n```\n\nThe following example shows how the first output can be modified:\n\n```js\nvar trough = require('trough')\n\ntrough()\n  .use(function(val) {\n    return 'even ' + val\n  })\n  .run('more value', 'untouched', console.log)\n```\n\nYields:\n\n```txt\nnull 'even more value' 'untouched'\n```\n\n##### Promise\n\nIf `fn` returns a promise, and that promise rejects, the pipeline fails\nand `done` is invoked with the rejected value.\n\nIf `fn` returns a promise, and that promise resolves with a value\n(neither `null` nor `undefined`), the first `input` of the next function\nis set to that value (all other `input` is passed through).\n\n###### Example\n\nThe following example shows how rejecting a promise stops the pipeline:\n\n```js\nvar trough = require('trough')\n\ntrough()\n  .use(function(val) {\n    return new Promise(function(resolve, reject) {\n      reject('Got: ' + val)\n    })\n  })\n  .run('val', console.log)\n```\n\nYields:\n\n```txt\nGot: val\n```\n\nThe following example shows how the input isn’t touched by resolving\nto `null`.\n\n```js\nvar trough = require('trough')\n\ntrough()\n  .use(function() {\n    return new Promise(function(resolve) {\n      setTimeout(function() {\n        resolve(null)\n      }, 100)\n    })\n  })\n  .run('Input', console.log)\n```\n\nYields:\n\n```txt\nnull 'Input'\n```\n\n##### Asynchronous\n\nIf `fn` accepts one more argument than the given `input`, a `next`\nfunction is given (after the input).  `next` must be called, but doesn’t\nhave to be called async.\n\nIf `next` is given a value (neither `null` nor `undefined`) as its first\nargument, the pipeline fails and `done` is invoked with that value.\n\nIf `next` is given no value (either `null` or `undefined`) as the first\nargument, all following non-nully values change the input of the following\nfunction, and all nully values default to the `input`.\n\n###### Example\n\nThe following example shows how passing a first argument stops the\npipeline:\n\n```js\nvar trough = require('trough')\n\ntrough()\n  .use(function(val, next) {\n    next(new Error('Got: ' + val))\n  })\n  .run('val', console.log)\n```\n\nYields:\n\n```txt\nError: Got: val\n    at ~/example.js:5:10\n```\n\nThe following example shows how more values than the input are passed.\n\n```js\nvar trough = require('trough')\n\ntrough()\n  .use(function(val, next) {\n    setTimeout(function() {\n      next(null, null, 'values')\n    }, 100)\n  })\n  .run('some', console.log)\n```\n\nYields:\n\n```txt\nnull 'some' 'values'\n```\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/wooorm/trough.svg\n\n[travis]: https://travis-ci.org/wooorm/trough\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/wooorm/trough.svg\n\n[codecov]: https://codecov.io/github/wooorm/trough\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[ware]: https://github.com/segmentio/ware\n\n[trough]: #trough-1\n\n[use]: #troughusefn\n\n[run]: #troughruninput-done\n\n[fn]: #function-fninput-next\n\n[done]: #function-doneerr-output\n\n[async]: #asynchronous\n","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"time":{"modified":"2018-04-15T19:25:09.808Z","created":"2016-08-01T15:37:21.468Z","1.0.0":"2016-08-01T15:37:21.468Z","1.0.1":"2017-07-09T10:02:42.292Z","1.0.2":"2018-04-15T19:25:06.523Z"},"homepage":"https://github.com/wooorm/trough#readme","keywords":["middleware","ware"],"repository":{"type":"git","url":"git+https://github.com/wooorm/trough.git"},"contributors":[{"name":"Titus Wormer","email":"tituswormer@gmail.com","url":"http://wooorm.com"}],"author":{"name":"Titus Wormer","email":"tituswormer@gmail.com","url":"http://wooorm.com"},"bugs":{"url":"https://github.com/wooorm/trough/issues"},"license":"MIT","readmeFilename":"readme.md","_attachments":{},"_etag":"W/\"8e4698e6ec26df597120def555100f71\"","_lastModified":"Sun, 27 May 2018 19:55:32 GMT"}